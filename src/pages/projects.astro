---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Projects - Parents in Tech">
	<main>
		<div class="container">
			<div class="hero-section">
				<h1>Our Projects</h1>
				<p class="hero-subtitle">Open-source projects created by the Parents in Tech community to inspire, educate, and empower families through technology.</p>
			</div>
			
			<div class="loading" id="loading">
				<div class="spinner"></div>
				<p>Loading projects...</p>
			</div>
			
			<div class="content-grid">
                <section class="projects" id="projects-grid">
				<!-- Projects will be rendered here -->
                 </section>
			</div>
			
			<div class="error-message" id="error-message" style="display: none;">
				<h3>Unable to load projects</h3>
				<p>There was an issue fetching our GitHub repositories. Please try again later.</p>
			</div>
		</div>
	</main>
</Layout>

<script>
  interface Repository {
    id: number;
    name: string;
    description: string | null;
    html_url: string;
    language: string | null;
    stargazers_count: number;
    forks_count: number;
    updated_at: string;
    topics: string[];
    homepage: string | null;
  }

  function formatDate(dateString: string): string {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', { 
      year: 'numeric', 
      month: 'short', 
      day: 'numeric' 
    });
  }

  function getLanguageColor(language: string | null): string {
    const colors: Record<string, string> = {
      'JavaScript': '#f1e05a',
      'TypeScript': '#3178c6',
      'Python': '#3572A5',
      'Java': '#b07219',
      'Go': '#00ADD8',
      'Rust': '#dea584',
      'C++': '#f34b7d',
      'C': '#555555',
      'HTML': '#e34c26',
      'CSS': '#1572B6',
      'Vue': '#4FC08D',
      'React': '#61DAFB',
      'Astro': '#ff5a03',
    };
    return colors[language || ''] || '#6b7280';
  }

  function createProjectCard(repo: Repository): string {
    const languageColor = getLanguageColor(repo.language);
    const topics = repo.topics?.slice(0, 3) || [];
    
    return `
      <div class="card">
          <h3 class="project-title">
            <a href="${repo.html_url}" target="_blank" rel="noopener noreferrer">
              ${repo.name}
            </a>
          </h3>
          <div class="project-stats">
            <span class="stat">
              <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                <path d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z"/>
              </svg>
              ${repo.stargazers_count}
            </span>
            <span class="stat">
              <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                <path d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.25 2.25 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878z"/>
              </svg>
              ${repo.forks_count}
            </span>
        </div>
        
        <p class="project-description">
          ${repo.description || 'No description available'}
        </p>
        
        <div class="project-meta">
          ${repo.language ? `
            <div class="language">
              <span class="language-dot" style="background-color: ${languageColor}"></span>
              ${repo.language}
            </div>
          ` : ''}
          
          ${topics.length > 0 ? `
            <div class="topics">
              ${topics.map(topic => `<span class="topic-tag">${topic}</span>`).join('')}
            </div>
          ` : ''}
        </div>
        
        <div class="card-footer">
          <span class="updated-date">Updated ${formatDate(repo.updated_at)}</span>
          ${repo.homepage ? `
            <a href="${repo.homepage}" target="_blank" rel="noopener noreferrer" class="demo-link">
              <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                <path d="M3.75 2a.75.75 0 00-.75.75v10.5c0 .414.336.75.75.75h8.5a.75.75 0 00.75-.75V2.75a.75.75 0 00-.75-.75H3.75zM2 2.75C2 1.784 2.784 1 3.75 1h8.5c.966 0 1.75.784 1.75 1.75v10.5A1.75 1.75 0 0112.25 15h-8.5A1.75 1.75 0 012 13.25V2.75z"/>
                <path d="M6 10.25a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75zM6 7.25a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 016 7.25z"/>
              </svg>
              Demo
            </a>
          ` : ''}
        </div>
      </div>
    `;
  }

  async function loadProjects() {
    const loading = document.getElementById('loading');
    const grid = document.getElementById('projects-grid');
    const errorMessage = document.getElementById('error-message');
    
    try {
      const response = await fetch('/api/repos');
      if (!response.ok) throw new Error('Failed to fetch repositories');
      
      const repos: Repository[] = await response.json();
      
      if (repos.length === 0) {
        grid!.innerHTML = '<div class="no-projects"><p>No projects found.</p></div>';
      } else {
        // Sort by stars and recent activity
        const sortedRepos = repos.sort((a, b) => {
          const scoreA = a.stargazers_count + (new Date(a.updated_at).getTime() / 1000000000);
          const scoreB = b.stargazers_count + (new Date(b.updated_at).getTime() / 1000000000);
          return scoreB - scoreA;
        });
        
        grid!.innerHTML = sortedRepos.map(createProjectCard).join('');
      }
      
      loading!.style.display = 'none';
      grid!.style.display = 'grid';
      
    } catch (error) {
      console.error('Error loading projects:', error);
      loading!.style.display = 'none';
      errorMessage!.style.display = 'block';
    }
  }

  // Load projects when page loads
  loadProjects();
</script>

<style>
	main {
		margin: auto;
		padding: 80px 1.5rem 1.5rem;
		color: white;
		min-height: 60vh;
	}
	
	.container {
		max-width: 1200px;
		margin: 0 auto;
	}

    .content-grid {
		display: flex;
		flex-direction: column;
		gap: 3rem;
	}
	
	.hero-section {
		text-align: center;
		margin-bottom: 4rem;
	}

	.hero-section h1 {
		font-size: 3rem;
		font-weight: 800;
		margin-bottom: 1rem;
		background: linear-gradient(135deg, #883aee, #a855f7);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
	}

	.hero-subtitle {
		font-size: 1.25rem;
		opacity: 0.9;
		max-width: 600px;
		margin: 0 auto;
	}
	
	.loading {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		padding: 4rem 0;
	}
	
	.spinner {
		width: 40px;
		height: 40px;
		border: 3px solid rgba(136, 58, 238, 0.3);
		border-top: 3px solid #883aee;
		border-radius: 50%;
		animation: spin 1s linear infinite;
		margin-bottom: 1rem;
	}
	
	@keyframes spin {
		0% { transform: rotate(0deg); }
		100% { transform: rotate(360deg); }
	}
	
	.projects {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
		gap: 1.5rem;
		margin-top: 2rem;
	}

	.card {
		background: rgba(255, 255, 255, 0.05);
		border: 1px solid rgba(255, 255, 255, 0.1);
		border-radius: 1rem;
		padding: 2rem;
		backdrop-filter: blur(10px);
		transition: all 0.3s ease;
		box-shadow: 0 8px 32px rgba(136, 58, 238, 0.1);
	}

	.card:hover {
		border-color: rgba(136, 58, 238, 0.3);
		transform: translateY(-2px);
		box-shadow: 0 12px 36px rgba(136, 58, 238, 0.15);
	}
	
	.card-header {
		display: flex;
		justify-content: space-between;
		align-items: flex-start;
		margin-bottom: 1rem;
	}
	
	.project-title {
		margin: 0;
		font-size: 1.25rem;
		font-weight: 700;
		flex: 1;
	}
	
	.project-title a {
		color: #883aee;
		text-decoration: none;
		transition: color 0.3s ease;
	}
	
	.project-title a:hover {
		color: #6f2dbd;
	}
	
	.project-stats {
		display: flex;
		gap: 1rem;
		margin-left: 1rem;
	}
	
	.stat {
		display: flex;
		align-items: center;
		gap: 0.25rem;
		font-size: 0.875rem;
		color: rgba(255, 255, 255, 0.7);
	}
	
	.project-description {
		color: rgba(255, 255, 255, 0.8);
		line-height: 1.5;
		margin-bottom: 1.5rem;
		font-size: 0.95rem;
	}
	
	.project-meta {
		display: flex;
		flex-direction: column;
		gap: 0.75rem;
		margin-bottom: 1.5rem;
	}
	
	.language {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		font-size: 0.875rem;
		color: rgba(255, 255, 255, 0.7);
	}
	
	.language-dot {
		width: 12px;
		height: 12px;
		border-radius: 50%;
	}
	
	.topics {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}
	
	.topic-tag {
		background: rgba(136, 58, 238, 0.2);
		color: #883aee;
		padding: 0.25rem 0.5rem;
		border-radius: 0.375rem;
		font-size: 0.75rem;
		font-weight: 500;
	}
	
	.card-footer {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding-top: 1rem;
		border-top: 1px solid rgba(255, 255, 255, 0.1);
	}
	
	.updated-date {
		font-size: 0.875rem;
		color: rgba(255, 255, 255, 0.6);
	}
	
	.demo-link {
		display: flex;
		align-items: center;
		gap: 0.25rem;
		color: #883aee;
		text-decoration: none;
		font-size: 0.875rem;
		font-weight: 500;
		transition: color 0.3s ease;
	}
	
	.demo-link:hover {
		color: #6f2dbd;
	}
	
	.error-message {
		text-align: center;
		padding: 4rem 0;
		color: rgba(255, 255, 255, 0.7);
	}
	
	.no-projects {
		text-align: center;
		padding: 4rem 0;
		color: rgba(255, 255, 255, 0.7);
	}
	
	@media (max-width: 768px) {
		.projects-grid {
			grid-template-columns: 1fr;
			gap: 1rem;
		}
		
		.card-header {
			flex-direction: column;
			align-items: flex-start;
			gap: 0.5rem;
		}
		
		.project-stats {
			margin-left: 0;
		}
		
		.card-footer {
			flex-direction: column;
			align-items: flex-start;
			gap: 0.5rem;
		}
	}
</style>
